unit_id,unit_title,lesson_id,lesson_title,lesson_activity,lesson_activity_name,lesson_notes,lesson_video_id,lesson_objectives,lesson_description
1,Cloud Computing Fundamentals,1,Course Info,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.1/Lesson1.1Instructionsfortakingthiscourse_Text.html,Kde5YVUwDTQ,"<p>Prof. Judy Qiu covers basic information about Unit 1, including lecture schedule and homework submissions. Key cloud computing topics are highlighted. A selection of recommended and required textbooks is given, followed by an overview of the course structure.</p>",
1,Cloud Computing Fundamentals,2,Introduction,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.2/Lesson1.2Filteringbycolor_Text_.html,5lKj8_nqj9k,"<p>Changes in computing technology for the past five decades are discussed. The rise of Big Data is shown in terms of its growth and significance. A prediction is made that the paradigm which has held ‘til now of individual researchers with personal computers will give way to communities of researchers organizing through clouds. A more in-depth look at Unit 1 follows, focusing on the chapters from Distributed and Cloud Computing: From Parallel Processing to the Internet of Things.</p>",
1,Cloud Computing Fundamentals,3,Data Center Model,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.3/Lesson1.3Howsearchworks_Text_.html,6Hq_LuLB-RU,"<p>A look at what truly defines a ‘cloud’. Advantages like scalability and cost-effectiveness have promulgated commercial cloud offerings such as Amazon EC2. Cloud architecture as divided into three layers: Infrastructure as a Service, Platform as a Service, and Software as a Service. AzureBlast is used as an example of how to utilize the cloud setup. Certain misconceptions about clouds are then presented for further discussion.</p>",
1,Cloud Computing Fundamentals,4,"Data Intensive Sciences",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,Ptoj3BME_z4,"<p>Some time is spent analyzing the current age of vast data growth, where business, science, and consumer activity has seen an explosion of stored data measured in exobytes. In response to this, the way we conduct scientific research has also undergone an upgrade. However, the average scientist would rather focus on their own research rather than spend time trying to learn different methods of cloud and supercomputing.</p>",
1,Cloud Computing Fundamentals,5,"IaaS, PaaS and SaaS",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,,"<p>Definitions and examples are given for Infrastructure as a Service, Platform as a Service, and Software as a Service. A chart is shown illustrating how use of clouds trades cost and control for efficiency. Following this is an exploration of the MapReduce program, and an illustration of its concepts through WordCount. Finally, four distinct approaches to MapReduce are compared.</p>",
1,Cloud Computing Fundamentals,6,"Challenges",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,_irz3v1gT-A,"<p>The demands of Big Data calls for advances in areas like distributed computing, systems management, internet technology, and hardware. Clouds have become more prominent in the last few decades, so much so that many people today take advantage of them without even knowing it. Of course, this has also led to increased concerns about security, price, tech support, etc. In spite of this, clouds still have clear advantages over traditional computing models. A quiz is offered at the end asking students to correctly place software in a hierarchy of computing.</p>",
2,How to Run VMs (IaaS),1,"Course Expectations",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,wuRGAuDaGPY,"<p>Examples and definitions are given for SaaS, PaaS, and IaaS. Computational models must be designed with the problems and effective resources in mind. A demonstration of cloud use for Bioinformatics on the FutureGrid educational testbed shows how clouds offer advantages of provisioning and virtual cluster support. Overhead and performance issues are touched upon through charts showing the use of three different virtual clusters.</p>",
2,How to Run VMs (IaaS),2,"Student Work 1",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,DYG6_bUGsqY,"<p>The work of previous B649 students is presented, covering a variety of topics and software: HBase, DryadLINQ, virtualization, commercial cloud storage, and IU’s Twister iterative MapReduce.</p>",
2,How to Run VMs (IaaS),3,"Student Work 2",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,DqaQ0kemmaw,"<p>This lecture offers further examples of prior student projects in areas like cloud storage, infrastructure and platforms, as well as high level languages like Apache Pig. Other topics cover MapReduce in Single Program Multiple Data mode, genetic algorithms in MapReduce, Hadoop supporting recommender systems, K-means clustering, etc. Following this the benefits/vulnerabilities of clouds and some of their most well-known programs are showcased in other research assignments.</p>",
2,How to Run VMs (IaaS),4,"Growth of Virtual Machines",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,5oKoAPCXLws,"<p>Importance of virtualization is explored, including cross-platform applications. Virtualization has seen rapid growth in recent years in terms of use and services offered. Virtual machines differ from traditional computers in that software virtualization layer (hypervisor) runs on hardware, allowing guest OS to run on top of host OS. VMs can run independent of hardware specifications. Four different types of VM architecture, defined by the layer which the virtual machine monitor (VMM) runs on. VM is identical to physical machines and can be saved and stored, as well as migrated across hardware.</p>",
2,How to Run VMs (IaaS),5,"Implementation Levels",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,Le-kv-eAhvg,"<p>Virtualization can be implemented on five levels: application, library, OS, hardware, and instruction. Their benefits are compared in terms of performance, flexibility, complexity, and isolation. A layout is provided for the Linux virtualization layer, OpenVZ (OS level), which creates virtual private servers. CUDA is a high performance computing library, not designed for VMs; vCUDA is a virtual layer that allows interaction between CUDA and VMs, creating a virtual CUDA library.</p>",
2,How to Run VMs (IaaS),6,"Tools and Mechanisms",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,VYz5rp5HDVE,"<p>A list of major hypervisors is given. Type 1 hypervisor resides on the bare metal computer, while Type 2 runs over the host OS. XEN is an open source hardware level hypervisor: consists of hypervisor, kernel, and application. Domain0 in XEN is a VM that manages other VMs. Two types of hardware virtualization: full virtualization and host-based virtualization. Para-virtualization does not need to modify the guest OS like full virtualization and works through hypercalls. An example is the ESX server from VMware.</p>",
2,How to Run VMs (IaaS),7,"CPU, Memory & I/O Devices",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,I_J4eUUavSY,"<p>A hybrid approach to virtualization involves offloading some tasks to the hardware to reduce overhead. This can be combined with para-virtualization for even greater effects. In a guest OS, the VMM provides shadow page tables to transfer virtual memory to machine memory. An example is shown in the Intel Extended Page Table. A virtualization layer for an I/O device is possible, allowing it to act like a physical device and manage host and guest addresses, shown in a detailed VMware example.</p>",
2,How to Run VMs (IaaS),8,"Clusters and Resource Mgmt.",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,Mn9pgGtFy4g,"<p>Characteristics of VM clusters are listed, including the ability to run multiple VMs on the same node and size alteration. Physical clusters are linked through nodes, while virtual clusters can be linked through physical or virtual nodes and can be replicated in virtual servers.  Prepackaged OS can be installed in a virtual cluster. Should a VM fail for any reason, its image can be migrated to a new host so work is not lost. An example of this is demonstrated with XEN.</p>",
2,How to Run VMs (IaaS),9,"Data Center Automation",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,mvXBRvTwAVg,"<p>Whole data centers can be virtualized, enabling for the construction of private clouds. Some tools for Infrastructure as a Service clouds are Nimbus, Eucalyptus, OpenNebula, and vSphere. Eucalyptus is shown in greater detail. Trust issues in cloud security are answered in virtual machines. Suggested reading material is provided at the end.</p>",
2,How to Run VMs (IaaS),10,"Clouds in the Workplace",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,Endt6mWUfEo,"<p>Clouds run as servers for data storage and sharing on the Internet in an on-demand capacity. Cloud services are scalable depending on the client’s needs, allowing for a seemingly limitless source of computing power that can expand or shrink to meet financial demands. Some examples of cloud services are LinkedIn, Amazon S3, and Google App Engine. Different variations of clouds like IaaS and PaaS are offered by both open source and commercial providers. Cloud systems are composed of separate elements like Eucalyptus, Xen and VMware.</p>",
2,How to Run VMs (IaaS),11,"Checklists & Challenges",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,cwtWpZcWuQ0,"<p>The capabilities of several IaaS cloud structures like Amazon EC2 or PaaS like Microsoft Azure are listed. Public and private clouds share certain features; the main difference is public clouds are owned by service providers while private clouds are offered by individual corporations. Certain enabling technologies are required for clouds to provide quick and scalable computing. These include virtual cluster provisioning and multi-tenant environments. PaaS demands the capability to process huge amounts of data as in the case of web searches. Some challenges faced by cloud computing include vendor lock-in owing to lack of standard APIs and metrics; for scientists, there is uncertainty about whether experiments can be reproduced effectively in different cloud environments. However there are distinct advantages clouds potentially have to offer: standardized APIs can eliminate lock-in, and encryption offers data confidentiality.</p>",
2,How to Run VMs (IaaS),12,"Data Center Setup",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,zBVtXzqF2ew,"<p>Huge data centers enable cloud computing, containing up to a million servers. Large data centers charge less for their services than small ones. A diagram illustrates the typical setup of a cloud; rack space on the bottom, on top of which are load balancers, then excess routers and border routers. The next figure compares cost effectiveness in a traditional IT model to a cloud. Other figures display small server clusters and a typical data center arrangement, including emergency power supply and cooling system. A chart shows the power consumption based on CPU, disk, etc. Disks in warehouse servers may be onsite or attached to outside connections like InfiniBand. Switches can form an array of racks. The distribution of memory across a local, rack, or array server in warehouse server setup is listed.</p>",
2,How to Run VMs (IaaS),13,"Cultivating Clouds",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson1.4/Lesson1.4Theartofkeywordchoice_Text_.html,zxoqRdvXM28,"<p>Power utilization effectiveness (PUE) for a warehouse is determined by comparing it to IT power usage. Racks can contain 40 servers, shipping containers can have up to 1,000 servers; a data center could take 2 years to construct. Warehouse scale computing has greater economy of scale than data centers by reducing network and administrative costs. Individual users can interact with clouds in the SaaS model, while organizations use PaaS. Clouds generally use VMs to recover from system failures. It is predicted that the cloud job market and demand for clouds will experience great growth in the future. Clouds have become ubiquitous in all aspects of the private and public sector. In the future clouds must take into account user privacy, data security and copyright protection.</p>",
2,How to Run VMs (IaaS),14,Applying for FutureSystems Account,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson2.1/Lesson2.1Whensearchresultssuggestsomethingnew.html,OMPof-Aij0c,"<p></p>",
2,How to Run VMs (IaaS),15,FutureSystems India OpenStack,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson2.2/Lesson2.2Thinkingmoredeeplyaboutyoursearch_Te.html,WQRLR_2QxUs,"<p></p>",
2,How to Run VMs (IaaS),16,Starting VMs on FutureSystems,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson2.3/Lesson2.3Understandingyouroptionsfordifferent.html,KHSyCYvNjK0,"<p></p>",
2,How to Run VMs (IaaS),17,Hadoop WordCount on VMs,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson2.3/Lesson2.3Understandingyouroptionsfordifferent.html,1TrjmcPHrRU,"<p></p>",
3,How to Run MapReduce (PaaS),1,Apache Data Analysis Open Stack,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.1/Lesson3.1Weborganization_Text_.html,6vkgvGtyv4Q,"<p>The buildup of Big Data has seen the development of new data storage systems like MapReduce and Hadoop. Apache’s Big Data Stack houses a host of programs designed around Google's offerings like MapReduce.  The architecture of Hadoop 1.0 and 2.0 are compared, along with an examination of the MapReduce concept. A demo video of Twister-MDS includes a 3-dimensional representation of data cluster sorting through the PlotViz program. Data analysis tool Twister boasts features like in-memory support of tasks, data flow separation, and portability.</p>",
3,How to Run MapReduce (PaaS),2,MapReduce,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.2/Lesson3.2Filetype_Text_.html,sSIGaDaulvA,"<p>MapReduce was designed by Google to address the problem of large-scale data processing. A breakdown of basic MapReduce terms and functions follows. Use of MapReduce has flourished since its premier, as illustrated by an in-depth example of its use in WordCount. Finally the basic process of MapReduce is shown. </p>",
3,How to Run MapReduce (PaaS),3,Hadoop Framework,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.3/Lesson3.3Removinginvasiveresults_Text_.html,Vuroqly6FTE,"<p>Hadoop is an open source version of MapReduce designed for broad application in terms of code and settings. Storage is done in the Hadoop Distributed File System through master and slave nodes. Compute is handled by JobTracker and TaskTracker; the duties of these two intertwined programs are then explored more fully.</p>",
3,How to Run MapReduce (PaaS),4,Hadoop Tasks,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.4/Lesson3.4ORandquotes_Text_.html,UN4t3tvdjms,"<p>The Map stage of MapReduce is shown in greater detail. This process starts with Hadoop Distributed File System, which handles the input data. Key value pairs are assigned to the data blocks.  Combiner reduces data size and Partitioner determines distribution of keys among reducers. Intermediate data is stored in a circular buffer before being sent to reduce tasks. Shuffle and Merge are used to order and reduce size of intermediate data. Reduce tasks take over then to determine the output data format. A final chart illustrates the concept of parallelism in MapReduce.</p>",
3,How to Run MapReduce (PaaS),5,Fault Tolerance,yes,Lesson 3.5 Activity,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,a3AlOTmD42k,"<p>Fault tolerance is a natural benefit of MapReduce. The master node pings worker nodes regularly to verify they are working, and acts accordingly if they do not respond. A diagram illustrates the files which are in charge of things like number of map and reduce tasks, and what to do when the limit is reached on the buffer. The lecture ends with a discussion of class assignments.</p>",
3,How to Run MapReduce (PaaS),6,"Programming on a Computer Cluster",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,rRR2ALa5CUA,"<p>Hadoop is now a large part of Yahoo!’s system setup, as well as handling a tremendous variety of data in other areas like medicine and business. A list of time spans for actions in system requirements is given. The original MapReduce was designed to resolve problems like load balancing and machine failures.</p>",
3,How to Run MapReduce (PaaS),7,"How Hadoop Runs on a MapReduce Job",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,KWLY_maNEPA,"<p>A detailed diagram of the MapReduce job framework is given. This includes task status updates, shuffling, and writing data to nodes. MapReduce is a C++ framework, while Hadoop is written in Java. Shuffling and sorting occurs in the map phase. Reduce reads and writes files to HDFS, and the merger generates the final result. The second Quiz is given at the end.</p>",
3,How to Run MapReduce (PaaS),8,"Literature Review",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,5YmjrhEFQsk,"<p>This video deals primarily with scientific papers written on the topic of MapReduce and related programs. There is a certain criteria for judging scientific submissions. The first paper highlights Google File System, covering topics like data chunks, metadata, and replicas. This is followed by MapReduce and BigTable. </p>",
3,How to Run MapReduce (PaaS),9,"Introduction to BLAST",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,mdA0T57Rc9g,"<p>There are four types of programming model communication patterns: embarrassingly parallel (only map), classic map/reduce, iterative map/reduce, and loosely synchronous. The basic bioinformatics BLAST (Basic Local Alignment Sequence Tool) program data flow is illustrated. An example of database creation comes from the Seattle Children’s Hospital. BLAST uses scores to find similar sequences in databases. </p>",
3,How to Run MapReduce (PaaS),10,"BLAST Parallelization",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,isc0MjkwTlk,"<p>The role of master and worker nodes in BLAST multi-thread usage is discussed. BLAST can be parallelized in several ways: multi-thread, query segmentation, and database segmentation. BLAST is pleasingly parallel in application, but many programs are not. Further information about articles featuring BLAST is provided at the end. </p>",
3,How to Run MapReduce (PaaS),11,"SIMD vs MIMD;SPMD vs MPMD",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,zHQiR56Zmtc,"<p>Four types of parallel models: SISD (traditional PCs), SIMD (GPUs), MISD (shuttle flight control computer), MIMD (distributed systems). Point-to-point (P2P) communication in MPI is used as an example of parallelization. Each successive process adds its own stamp to the data before passing it on to the next. Matrix multiplication for scientific applications differs from the norm in that data is sent in a matrix, not a string. WordCount functions in a map/reduce pattern. These are all types of SIMD. SPMD and MPMD are two other types of model.</p>",
3,How to Run MapReduce (PaaS),12,"Data Locality",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,RqLA7_asK50,"<p>A brief review is given of previous topics. As opposed to MPI and HPC, MapReduce brings the computation to the data, rather than vice-versa. This is done to limit energy usage and network congestion. Several factors such as number of nodes and tasks can impact data locality.  An equation to improve data locality is tested in an experiment, whose results are given. By default, Hadoop determines scheduling of tasks to available slots in terms of best local composition, not global.</p>",
3,How to Run MapReduce (PaaS),13,"Optimal Data Locality",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,Ok8vdrFXo5w,"<p>Global data optimization can be achieved through a proposed algorithm given here. Task, slot, and cost are factors in this algorithm. Network bandwidth must also be taken into consideration when assigning tasks to slots. Linear Sum Assignment Problems require greater time to finish when matrix size is increased.  Two different scheduling algorithms were designed to improve the original one in Hadoop. An experiment was run comparing all three, with the network topology-aware algorithm clearly outperforming the others.</p>",
3,How to Run MapReduce (PaaS),14,"Task Granularity",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,u9UpgTnOZz4,"<p>Size of data blocks affects load balancing and overhead. Using Bag of Divisible Tasks method, tasks can be split into sub-tasks and distributed amongst slots to maximize efficiency.  When splitting tasks, one must take into account when and which tasks to split, as well as how and how many. In our current proposed algorithm, tasks are split until each slot is occupied. It also uses ASPK (Aggressive Scheduling with Prior Knowledge) to split larger tasks first and when the performance gain is deemed optimal. Optimal and Expected Remaining Job Execution Time can help determine task splitting. Several examples are offered with either single or multiple jobs.</p>",
3,How to Run MapReduce (PaaS),15,"Resource Utilization and Speculative Execution",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson3.5/Lesson3.5IntextandAdvancedSearch_Text_.html,wWyFiqDIYus,"<p>Resource stealing involves appropriating cores that are kept in reserve on separate nodes and returning them when the computation is over. Speculative execution addresses fault tolerance; when the master node notices a task is running slowly, it will start a speculative task which can take over if it is determined the original task will not finish in time. Overuse of speculative tasks can lead to poor data locality and higher energy demands.</p>",
4,How to Run Iterative MapReduce (PaaS),1,MapReduce Refresher,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.1/Lesson4.1Searchbyimage_Text_.html,0TRTdzgC_N0,"<p>A review covers cloud computing levels, MapReduce, the course structure, etc. This is followed by a look at Google and their initial offering, Google search engine. Amount of tasks performed on this engine increased considerably over the course of a single decade.</p>",
4,How to Run Iterative MapReduce (PaaS),2,Google Search Engine 1,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.2/Lesson4.2Searchfeatures_Text_.html,S2oT7uMw5Yg,"<p>The Google web server relies on index and doc servers. Index servers allow the search engine to not have to depend on manually checking every document, reducing computing power demands. Index partitioning can be accomplished either through subsets of documents or words. Basic differences between index and doc servers are discussed. Cache servers save previous query results and can bypass index/doc servers for repeat queries.</p>",
4,How to Run Iterative MapReduce (PaaS),3,Google Search Engine 2,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.2/Lesson4.2Searchfeatures_Text_.html,pxos3Yt6y6I,"<p>Cache servers greatly enhance the performance of search engines. However, this duplication of queries can lead to higher latency. Crawling in a search engine handles subsets of websites. Batch indexing is the simplest way to create indexes, although it lacks advanced features like checkpointing, which could lead to issues down the line. In-memory index added to Google over a decade ago; increases throughput and decreases latency. Image-based and video-based searches were added in 2007, among others.  Google File System, MapReduce and BigTable are key components of Google’s current search structure. A discussion of the initial Google proposal paper follows.</p>",
4,How to Run Iterative MapReduce (PaaS),4,Hadoop PageRank,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.3/Lesson4.3ConversionsandCalculator_Text_.html,GCp5OLLOrH0,"<p>PageRank algorithm in Google ranks a webpage’s popularity and relevance. The PageRank calculation formula is examined. After this comes an example of its performance and further mathematical formulae involved in its application.</p>",
4,How to Run Iterative MapReduce (PaaS),5,Discussions & Parallel Thinking,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.4/Lesson4.4Lefthandpanelanddaterangelimiting_Te.html,Qvim4sW2oqk,"<p>Four types of MapReduce: pleasingly parallel, classic, iterative, and loosely synchronous. A diagram shows the flow of data in MapReduce. Specific formulae for PageRank are shown with and without the damping factor. Key-value pairs can be written in matrix form by defining the keys as nodes. Map tasks must make sure to handle dangling nodes (isolated from neighbors), distributed page-rank contribution, and reducer output being the same format as map input. Reduce input is key-value pairs. Ideas behind parallel thinking are analyzed, along with a list of related reading. Seven important questions are asked concerning parallel computing. 13 ‘Dwarves’ are different methods of parallel computing, including MapReduce.</p>",
4,How to Run Iterative MapReduce (PaaS),6,Hadoop Extensions,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.5/Lesson4.5Translationandsearch_Text_.html,gS7TImRZZ1g,"<p>A model of MapReduce shows its structure. Dryad is Microsoft’s version of parallel processing. Twister is an iterative map-reduce framework, as are Haloop, Spark and Pregel. A comparison of their features and capabilities is included.</p>",
4,How to Run Iterative MapReduce (PaaS),7,Iterative MapReduce Models,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.5/Lesson4.5Translationandsearch_Text_.html,CXDdWmAWIvk,"<p>An introduction to the idea of iterative MapReduce. An overview of other MapReduce models follows. Map Only model has parallel map tasks with no communication between them. Classic MapReduce involves parallel map tasks and reduce tasks which aggregate output and allow legacy code. Loosely Synchronous is an MPI model used in computation and communication of scientific applications.</p>",
4,How to Run Iterative MapReduce (PaaS),8,Parallel Processes,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.5/Lesson4.5Translationandsearch_Text_.html,JAYvkIZ8TuE,"<p>CPU performance increases according to Moore’s Law can no longer keep up with the high volume of data being generated. Multi-core architecture is a response to this issue. It requires runtime approaches supporting parallelism, either data-centric for higher throughput (MapReduce) or the traditional HPC approach for optimized computation performance (MPI). MapReduce allows for moving computation to the data. A diagram illustrates the base MapReduce process. MapReduce is designed to improve I/O and handle intermediate data, task scheduling, and fault tolerance. Versions of MapReduce like Hadoop, Dryad and MPI boast different features and programming languages.</p>",
4,How to Run Iterative MapReduce (PaaS),9,Static and Variable Data,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.5/Lesson4.5Translationandsearch_Text_.html,UJHQ3VvWOTA,"<p>Iterative MapReduce was introduced to support high performance systems. It runs iterations of the map/reduce cycles. Data mining algorithms like K-means run numerous iterations. Static data such as data points in K-means does not change, while variable data can alter between each iteration. A naïve iterative MapReduce model can generate huge overhead owing to constantly referencing static data.  This can be overcome with long-running map/reduce tasks that distinguish between static and variable data. You can also accelerate the intermediate data transfer or combine the output of all reduce tasks. Iterative MapReduce is shown in the Twister program, which uses the combine output method and determines at the end of every iteration whether to stop or continue with further iterations. The master node in Twister is the Twister Driver, and the slave nodes are Twister Daemons. Twister stores I/O data in partition files. Three MapReduce patterns in Twister: 1) Large input data, reduced in the end; 2) Data size is constant; 3) Data volume increases after MapReduce execution. Data Manipulation Tool handles data loading and uses metadata to keep track of data in partitions. Twister employs static scheduling. Fault tolerance is reserved for failures that terminate running tasks. Static data can then be used to reassign the failed iterations. A list of Twister APIs is given.</p>",
4,How to Run Iterative MapReduce (PaaS),10,MapReduce Model Comparison,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.5/Lesson4.5Translationandsearch_Text_.html,n7RVGrC-wcs,"<p>This video showcases examples of work done comparing Twister results with Hadoop, MPI and DryadLINQ. The first is Map Only with CAP3 DNA Sequence Assembly, followed by Classic MapReduce with Pair-wise Sequences and High-Energy Physics, Iterative with K-means clustering, PageRank and Multi-dimensional Scaling, and finally Loosely Synchronous with Matrix Multiplication Algorithms. In all cases, Twister outperforms or is close to the competition. </p>",
4,How to Run Iterative MapReduce (PaaS),11,Twister K-means,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.5/Lesson4.5Translationandsearch_Text_.html,-G5jlzABo-Y,"<p>Twister is applied to K-means Clustering. K-means develops a set number of clusters by creating cluster centers (centroids) that encompass the data points after successive proximity calculations. Parallelization of K-means is accomplished in the partitions, and the final centroids are determined in the Reduce step. A sample of K-means Clustering code follows, after which Twister is shown being used to determine centroids on K-means. Several questions are posed pertaining to the features of Twister. The results of a Twister K-means run are compared with those from a sequential run. Shown here, as the number of data points increases, Twister’s runtimes get progressively faster. In a final set of runs against Hadoop, DryadLINQ, and MPI, Twister outperforms all but MPI.</p>",
4,How to Run Iterative MapReduce (PaaS),12,Coding & Iterative Alternatives,,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson4.5/Lesson4.5Translationandsearch_Text_.html,QTCpiwnwjvo,"<p>A more detailed look is taken at the code used to run Twister K-means. MapReduce has many programs designed around its setup, including other iterative versions like Haloop, Pregel, and Spark. Twister can extend the use of traditional MapReduce to more complex applications.</p>",
5,How to Store Data (NoSQL),1,"RDBMS vs. NoSQL",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.1/Lesson5.1Credibility_Text_.html,5TwMEfQJmsw,,"<p>A brief run-down of what has been studied so far. Current set of lessons focuses on loading data. Huge amounts of data in research means work must be done to develop means of handling it. Relational databases worked for a while, but now require memcache to provide distributed storage. Master-slave setup and sharding used to enable relational databases to operate across multiple nodes, but both methods have drawbacks. Another method is multiple masters. NoSQL differs from traditional SQL databases in that it does not support joining or require a fixed table schema.</p>"
5,How to Store Data (NoSQL),2,"NoSQL Characteristics",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.2/Lesson5.2Variantdata_Text_.html,BjtTDiKhqk8,"<p>Clouds have arisen as an answer to the data demands of social media. Three major programs for NoSQL are BigTable, Dynamo, and CAP theory. NoSQL is not meant to replace SQL, but to tackle the large-data problems SQL is not well equipped to handle. SQL ACID transactions are Atomic, Consistent, Isolated, and Durable. Consistency can be either strong (ACID) or weak (BASE). CAP theorem offers Consistency, Availability, and Partition tolerance, only two of which can coexist for a shared-data system. NoSQL comes in two varieties, each with pros and cons: Key-Value or schema-less. Common advantages of NoSQL include their being open source and fault tolerant.</p>",
5,How to Store Data (NoSQL),3,"BigTable",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.3/Lesson5.3Usingbookstoverifyaquote_Text_.html,JAlz9AI5I-M,"<p>Big Table is a key-value NoSQL model with data arranged in rows and columns. It is composed of Data File System, Chubby, and SSTable. A tablet is a range of rows in BigTable. The master node assigns tablets to tablet servers and manages these servers. Memory is conserved by making SSTables and memtables compact. BigTable is used in features of Google like their search engine and Google Earth.</p>",
5,How to Store Data (NoSQL),4,"HBase",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.4/Lesson5.4UsingWHOIS_Text_.html,i-ibhuVs-ck,"<p>HBase is a NoSQL core component of the Hadoop Distributed File System. It is a scalable distributed data store.  A timeline of HBase and Hadoop is shown. BigTable still has its uses but does not scale well to large amounts of analytic processing. HBase has a row-column structure similar to BigTable as well as master and slave nodes. Its place in the architecture of HDFS is shown in a diagram.</p>",
5,How to Store Data (NoSQL),5,"HBase Coding",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.5/Lesson5.5Occasionalmisconceptions_Text_.html,KbFMpYRBTtU,"<p>This video gives an overview of the code used in the installation of HBase and connecting to it.</p>",
5,How to Store Data (NoSQL),6,"Indexing Applications",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.5/Lesson5.5Occasionalmisconceptions_Text_.html,lgD3-F0bTyA,"<p>A brief summary of the course up to this point is given, followed by a diagram showing the setup of a search engine. Google’s search engine contains three key technologies: Google File System, BigTable, and MapReduce. However, research into big data remains difficult owing to the scope of its size. Social media data in particular is a huge source of data with numerous subsets, all of which demands specific approaches in terms of search queries. There are three stages to this approach: query, analysis, and visualization.</p>",
5,How to Store Data (NoSQL),7,"Related Work",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.5/Lesson5.5Occasionalmisconceptions_Text_.html,NDjAdFSVzxo,"<p>Indexing improves efficiency in querying data subsets and analysis. Indices can be single (B+, Hash) or multi-dimensional (R, Quad). Four databases which utilize indexing are HBase, Cassandra, Riak, and MongoDB. Current indexing strategies have limits; for instance, they cannot support range queries or only retrieve Top ‘n’ most relevant topics. Customizability of indexing among NoSQL databases is desirable.</p>",
5,How to Store Data (NoSQL),8,"Indexamples",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.5/Lesson5.5Occasionalmisconceptions_Text_.html,Ec3VFeTGuo8,"<p>Mapping between metadata and raw index data is the essential issue with indexing. Examples are shown for HBase, Riak, and MongoDB. An abstract index structure contains index keys, entry IDs among multiple entries, and additional fields. Index configuration allows for customizability through choice of fields, which can be anything from timestamps, text, or retweet status.</p>",
5,How to Store Data (NoSQL),9,"Indexing 101",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.5/Lesson5.5Occasionalmisconceptions_Text_.html,eKQaLkw-HBU,"<p>User-defined index allows a user to select the fields used in their search. Data records are indexed or un-indexed. Index structure is made up of key, entry ID, and entry fields. A walk-through customized index creation is shown on HBase, called IndexedHBase. HBase is suited to accommodate the creation of index tables. A performance test of IndexedHBase is done on the Truthy Twitter repository, displaying the various tables that can be created with different criteria. Loading time for large-scale historical data can be reduced by adding nodes.  Streaming data can be handled by increasing loaders. A comparison of query evaluation is made between IndexedHBase and Riak, with Riak being more efficient with small data loads but IndexedHBase proving superior for large-scale data.</p>",
5,How to Store Data (NoSQL),10,"Social Media Searches",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.5/Lesson5.5Occasionalmisconceptions_Text_.html,a3tcL-Qw9to,"<p>The Truthy Project archives social media data by way of metadata memes. Some problems faced in analyzing this data include its large volume, sparsity of information in tweets, and attempting to arrange streaming tweets. Apache Open Stack upgrades Hadoop 2.0 with YARN and a new HDFS. A diagram displays an indexing setup for social media data with YARN.</p>",
5,How to Store Data (NoSQL),11,"Analysis Algorithms",,,//www.google.com/edu/coursebuilder/courses/pswg/1.2/assets/notes/Lesson5.5/Lesson5.5Occasionalmisconceptions_Text_.html,MxoMd4mdshE,"<p>Another method of use for inverted indices is in analysis algorithms. The mathematics involved in this is explored, as well as how it relates to index data, mapping, and reducing. Rather than scanning all raw data present, indices allow for searching only the relevant data. An example is given illustrating how this decreases the time needed to search hashtags in Twitter.</p>",
6,Internet of Things,1,Everyday Data,,,,JcEUsH9aNT0,"<p>Ph.D. candidate Supun Kamburugamuva goes over the so-called Internet of Things as well as strategies and tools developed for Distributed Stream Processing.</p>",
6,Internet of Things,2,Streaming the Data Ocean,,,,e0P4bmU-FXk,"<p>Ph.D. candidate Supun Kamburugamuva goes over the so-called Internet of Things as well as strategies and tools developed for Distributed Stream Processing.</p>",
6,Internet of Things,3,Streams of Events,,,,5Rqupq5_a2Q,"<p>Ph.D. candidate Supun Kamburugamuva goes over the so-called Internet of Things as well as strategies and tools developed for Distributed Stream Processing.</p>",
6,Internet of Things,4,Faults & Frameworks,,,,QB9-cbjPAVw,"<p>Ph.D. candidate Supun Kamburugamuva goes over the so-called Internet of Things as well as strategies and tools developed for Distributed Stream Processing.</p>",
6,Internet of Things,5,Spouts to Bolts,,,,tjHVvy5kP0s,"<p>Ph.D. candidate Supun Kamburugamuva goes over the so-called Internet of Things as well as strategies and tools developed for Distributed Stream Processing.</p>",
6,Internet of Things,6,Pig Setup,,,,Uq_6sLjxEyk,"<p>A tutorial designed to introduce Pig programming and its use on previously applied functions.</p>",
6,Internet of Things,7,Pig Projects,,,,jEbpPW_jWgs,"<p>A tutorial designed to introduce Pig programming and its use on previously applied functions.</p>",
7,How to Build a Search Engine (SaaS),1,Google Components,,,,-yQrI4zWp4k,"<p></p>",
7,How to Build a Search Engine (SaaS),2,Google Architecture,,,,syZHezdbdRY,"<p></p>",
7,How to Build a Search Engine (SaaS),3,Google History,,,,Kg0NK0XUkHw,"<p></p>",
